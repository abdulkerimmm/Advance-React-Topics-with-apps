{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useHttp = (initialValue = false) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const httpTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\", initialValue && {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      if (initialValue) {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n        const createdTask = {\n          id: generatedId,\n          text: taskText\n        };\n        props.onAddTask(createdTask);\n      } else {}\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n      setData(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    httpTasks();\n  }, []);\n  return {\n    data,\n    isLoading,\n    error,\n    httpTasks\n  };\n};\n_s(useHttp, \"OFcTmW5Lh/BymfbnrrKvVupi56s=\");\nexport default useHttp;","map":{"version":3,"names":["useEffect","useState","useHttp","initialValue","_s","isLoading","setIsLoading","error","setError","data","setData","httpTasks","taskText","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","json","generatedId","name","createdTask","id","props","onAddTask","loadedTasks","taskKey","push","err","message"],"sources":["C:/Users/Abdul/Masaüstü/realistic example for custom hook/src/hooks/use-http.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useHttp = (initialValue = false) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  const httpTasks = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\",\r\n        initialValue && {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ text: taskText }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (initialValue) {\r\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\r\n        const createdTask = { id: generatedId, text: taskText };\r\n\r\n        props.onAddTask(createdTask);\r\n      } else {\r\n      }\r\n\r\n      const loadedTasks = [];\r\n\r\n      for (const taskKey in data) {\r\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n      }\r\n      setData(loadedTasks);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    httpTasks();\r\n  }, []);\r\n\r\n  return { data, isLoading, error, httpTasks };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAACC,YAAY,GAAG,KAAK,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpCN,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAAoE,EACpEX,YAAY,IAAI;QACdY,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEP;QAAS,CAAC,CAAC;QACxCQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMb,IAAI,GAAG,MAAMI,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAIpB,YAAY,EAAE;QAChB,MAAMqB,WAAW,GAAGf,IAAI,CAACgB,IAAI,CAAC,CAAC;QAC/B,MAAMC,WAAW,GAAG;UAAEC,EAAE,EAAEH,WAAW;UAAEL,IAAI,EAAEP;QAAS,CAAC;QAEvDgB,KAAK,CAACC,SAAS,CAACH,WAAW,CAAC;MAC9B,CAAC,MAAM,CACP;MAEA,MAAMI,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAItB,IAAI,EAAE;QAC1BqB,WAAW,CAACE,IAAI,CAAC;UAAEL,EAAE,EAAEI,OAAO;UAAEZ,IAAI,EAAEV,IAAI,CAACsB,OAAO,CAAC,CAACZ;QAAK,CAAC,CAAC;MAC7D;MACAT,OAAO,CAACoB,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZzB,QAAQ,CAACyB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACA5B,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEF,IAAI;IAAEJ,SAAS;IAAEE,KAAK;IAAEI;EAAU,CAAC;AAC9C,CAAC;AAACP,EAAA,CAlDIF,OAAO;AAoDb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}