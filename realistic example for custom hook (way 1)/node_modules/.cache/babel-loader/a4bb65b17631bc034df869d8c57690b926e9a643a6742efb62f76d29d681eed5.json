{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\realistic example for custom hook\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask1\";\nimport useHttp from \"./hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const {\n    datas,\n    isLoading,\n    error,\n    httpTasks: fetchTasks\n  } = useHttp(false);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  setTasks(datas);\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  console.log(datas);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kxmZmfAZNzyW9v0TsuN7fL6eaA8=\", false, function () {\n  return [useHttp];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tasks","NewTask","useHttp","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","datas","isLoading","error","httpTasks","fetchTasks","taskAddHandler","task","prevTasks","concat","console","log","Fragment","children","onAddTask","fileName","_jsxFileName","lineNumber","columnNumber","items","loading","onFetch","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/realistic example for custom hook/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Tasks from \"./components/Tasks/Tasks\";\r\nimport NewTask from \"./components/NewTask/NewTask1\";\r\nimport useHttp from \"./hooks/use-http\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const { datas, isLoading, error, httpTasks: fetchTasks } = useHttp(false);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n  setTasks(datas);\r\n  const taskAddHandler = (task) => {\r\n    setTasks((prevTasks) => prevTasks.concat(task));\r\n  };\r\n\r\n  console.log(datas);\r\n  return (\r\n    <React.Fragment>\r\n      <NewTask onAddTask={taskAddHandler} />\r\n      <Tasks\r\n        items={tasks}\r\n        loading={isLoading}\r\n        error={error}\r\n        onFetch={fetchTasks}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEU,KAAK;IAAEC,SAAS;IAAEC,KAAK;IAAEC,SAAS,EAAEC;EAAW,CAAC,GAAGX,OAAO,CAAC,KAAK,CAAC;EAEzEJ,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACNL,QAAQ,CAACC,KAAK,CAAC;EACf,MAAMK,cAAc,GAAIC,IAAI,IAAK;IAC/BP,QAAQ,CAAEQ,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAEDG,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAClB,oBACEL,OAAA,CAACP,KAAK,CAACuB,QAAQ;IAAAC,QAAA,gBACbjB,OAAA,CAACH,OAAO;MAACqB,SAAS,EAAER;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCtB,OAAA,CAACJ,KAAK;MACJ2B,KAAK,EAAEpB,KAAM;MACbqB,OAAO,EAAElB,SAAU;MACnBC,KAAK,EAAEA,KAAM;MACbkB,OAAO,EAAEhB;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB;AAACpB,EAAA,CAxBQD,GAAG;EAAA,QAEiDH,OAAO;AAAA;AAAA4B,EAAA,GAF3DzB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}