{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const httpTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\");\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n      setData(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    httpTasks();\n  }, []);\n  return {\n    data,\n    isLoading,\n    error,\n    httpTasks\n  };\n};\n_s(useHttp, \"OFcTmW5Lh/BymfbnrrKvVupi56s=\");\nexport default useHttp;","map":{"version":3,"names":["useEffect","useState","useHttp","_s","isLoading","setIsLoading","error","setError","data","setData","httpTasks","taskText","response","fetch","ok","Error","json","loadedTasks","taskKey","push","id","text","err","message"],"sources":["C:/Users/Abdul/Masaüstü/realistic example for custom hook/src/hooks/use-http.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  const httpTasks = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const loadedTasks = [];\r\n\r\n      for (const taskKey in data) {\r\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n      }\r\n      setData(loadedTasks);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    httpTasks();\r\n  }, []);\r\n\r\n  return { data, isLoading, error, httpTasks };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpCN,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMP,IAAI,GAAG,MAAMI,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIV,IAAI,EAAE;QAC1BS,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEb,IAAI,CAACU,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MAC7D;MACAZ,OAAO,CAACQ,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEF,IAAI;IAAEJ,SAAS;IAAEE,KAAK;IAAEI;EAAU,CAAC;AAC9C,CAAC;AAACP,EAAA,CApCID,OAAO;AAsCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}