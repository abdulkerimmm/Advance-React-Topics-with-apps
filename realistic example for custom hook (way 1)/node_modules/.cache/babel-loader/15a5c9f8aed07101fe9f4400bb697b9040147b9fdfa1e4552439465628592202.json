{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\realistic example for custom hook\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\"\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error(\"Request failed!\");\n  //     }\n\n  //     const data = await response.json();\n\n  //     const loadedTasks = [];\n\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  // useEffect(() => {\n  //   fetchTasks();\n  // }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"n5SlQVdc2sZg3OeT00ajYzBfpL0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tasks","NewTask","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","error","setError","tasks","setTasks","taskAddHandler","task","prevTasks","concat","Fragment","children","onAddTask","fileName","_jsxFileName","lineNumber","columnNumber","items","loading","onFetch","fetchTasks","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/realistic example for custom hook/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Tasks from \"./components/Tasks/Tasks\";\r\nimport NewTask from \"./components/NewTask/NewTask1\";\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // const fetchTasks = async (taskText) => {\r\n  //   setIsLoading(true);\r\n  //   setError(null);\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       \"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\"\r\n  //     );\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error(\"Request failed!\");\r\n  //     }\r\n\r\n  //     const data = await response.json();\r\n\r\n  //     const loadedTasks = [];\r\n\r\n  //     for (const taskKey in data) {\r\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n  //     }\r\n\r\n  //     setTasks(loadedTasks);\r\n  //   } catch (err) {\r\n  //     setError(err.message || \"Something went wrong!\");\r\n  //   }\r\n  //   setIsLoading(false);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   fetchTasks();\r\n  // }, []);\r\n\r\n  const taskAddHandler = (task) => {\r\n    setTasks((prevTasks) => prevTasks.concat(task));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NewTask onAddTask={taskAddHandler} />\r\n      <Tasks\r\n        items={tasks}\r\n        loading={isLoading}\r\n        error={error}\r\n        onFetch={fetchTasks}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMa,cAAc,GAAIC,IAAI,IAAK;IAC/BF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,oBACEV,OAAA,CAACN,KAAK,CAACmB,QAAQ;IAAAC,QAAA,gBACbd,OAAA,CAACF,OAAO;MAACiB,SAAS,EAAEN;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCnB,OAAA,CAACH,KAAK;MACJuB,KAAK,EAAEb,KAAM;MACbc,OAAO,EAAElB,SAAU;MACnBE,KAAK,EAAEA,KAAM;MACbiB,OAAO,EAAEC;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB;AAACjB,EAAA,CAnDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}