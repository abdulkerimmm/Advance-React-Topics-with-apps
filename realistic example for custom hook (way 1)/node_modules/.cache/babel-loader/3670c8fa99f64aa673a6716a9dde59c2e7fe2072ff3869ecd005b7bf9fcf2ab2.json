{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useHttp = initialValue => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [datas, setDatas] = useState([]);\n\n  // var datas = [];\n  const httpTasks = async (taskText, callback) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\", initialValue ? {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      } : {});\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      if (initialValue) {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n        setDatas([{\n          id: generatedId,\n          text: taskText\n        }]);\n      } else {\n        const loadedTasks = [];\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            text: data[taskKey].text\n          });\n        }\n        console.log(\"laodedtask:\", loadedTasks);\n        setDatas(loadedTasks);\n      }\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    datas,\n    isLoading,\n    error,\n    httpTasks\n  };\n};\n_s(useHttp, \"YzfZRKsI95PoTVtvkfm5NhaVq0Y=\");\nexport default useHttp;","map":{"version":3,"names":["useEffect","useState","useHttp","initialValue","_s","isLoading","setIsLoading","error","setError","datas","setDatas","httpTasks","taskText","callback","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","id","loadedTasks","taskKey","push","console","log","err","message"],"sources":["C:/Users/Abdul/Masaüstü/realistic example for custom hook/src/hooks/use-http.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useHttp = (initialValue) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [datas, setDatas] = useState([]);\r\n\r\n  // var datas = [];\r\n  const httpTasks = async (taskText, callback) => {\r\n    setIsLoading(true);\r\n\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://http-request-1cf75-default-rtdb.firebaseio.com//tasks.json\",\r\n        initialValue\r\n          ? {\r\n              method: \"POST\",\r\n              body: JSON.stringify({ text: taskText }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          : {}\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (initialValue) {\r\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\r\n        setDatas([{ id: generatedId, text: taskText }]);\r\n      } else {\r\n        const loadedTasks = [];\r\n\r\n        for (const taskKey in data) {\r\n          loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n        }\r\n        console.log(\"laodedtask:\", loadedTasks);\r\n        setDatas(loadedTasks);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return { datas, isLoading, error, httpTasks };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAIC,YAAY,IAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMU,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC9CP,YAAY,CAAC,IAAI,CAAC;IAElBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAAoE,EACpEZ,YAAY,GACR;QACEa,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAER;QAAS,CAAC,CAAC;QACxCS,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,GACD,CAAC,CACP,CAAC;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,IAAItB,YAAY,EAAE;QAChB,MAAMuB,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;QAC/BjB,QAAQ,CAAC,CAAC;UAAEkB,EAAE,EAAEF,WAAW;UAAEN,IAAI,EAAER;QAAS,CAAC,CAAC,CAAC;MACjD,CAAC,MAAM;QACL,MAAMiB,WAAW,GAAG,EAAE;QAEtB,KAAK,MAAMC,OAAO,IAAIN,IAAI,EAAE;UAC1BK,WAAW,CAACE,IAAI,CAAC;YAAEH,EAAE,EAAEE,OAAO;YAAEV,IAAI,EAAEI,IAAI,CAACM,OAAO,CAAC,CAACV;UAAK,CAAC,CAAC;QAC7D;QACAY,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,WAAW,CAAC;QACvCnB,QAAQ,CAACmB,WAAW,CAAC;MACvB;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ1B,QAAQ,CAAC0B,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACA7B,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAAEG,KAAK;IAAEJ,SAAS;IAAEE,KAAK;IAAEI;EAAU,CAAC;AAC/C,CAAC;AAACP,EAAA,CAhDIF,OAAO;AAkDb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}