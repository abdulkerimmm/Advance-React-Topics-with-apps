{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  count: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.count++;\n    },\n    decrement(state) {\n      state.count--;\n    },\n    incrementbyfive(state, action) {\n      state.count = state.count + action.payload;\n    },\n    toggleHandler(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: true\n};\nconst authSlice = createSlice({\n  name: \"authntication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    /// this means is our values essenatially reducer means initialState and name so our values\n    auth: authSlice.reducer\n  }\n});\nexport const CounterActions = counterSlice.actions; // this means actually actions means our functions so reducer part\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","count","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","incrementbyfive","action","payload","toggleHandler","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counter","auth","CounterActions","actions"],"sources":["C:/Users/Abdul/Masaüstü/redux-toolkid-starting/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { count: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.count++;\r\n    },\r\n    decrement(state) {\r\n      state.count--;\r\n    },\r\n    incrementbyfive(state, action) {\r\n      state.count = state.count + action.payload;\r\n    },\r\n    toggleHandler(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = { isAuthenticated: true };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"authntication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer, /// this means is our values essenatially reducer means initialState and name so our values\r\n    auth: authSlice.reducer,\r\n  },\r\n});\r\nexport const CounterActions = counterSlice.actions; // this means actually actions means our functions so reducer part\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE3D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,KAAK,EAAE;IACf,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,KAAK,EAAE;IACf,CAAC;IACDS,eAAeA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAC7BH,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAK,CAAC;AAElD,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC5BM,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACRW,KAAKA,CAACT,KAAK,EAAE;MACXA,KAAK,CAACO,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAE;MACZA,KAAK,CAACO,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IACPC,OAAO,EAAElB,YAAY,CAACiB,OAAO;IAAE;IAC/BE,IAAI,EAAEN,SAAS,CAACI;EAClB;AACF,CAAC,CAAC;AACF,OAAO,MAAMG,cAAc,GAAGpB,YAAY,CAACqB,OAAO,CAAC,CAAC;AACpD,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}