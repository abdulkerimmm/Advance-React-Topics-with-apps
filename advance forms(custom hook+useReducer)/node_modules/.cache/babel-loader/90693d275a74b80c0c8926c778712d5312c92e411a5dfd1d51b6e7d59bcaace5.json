{"ast":null,"code":"var _s = $RefreshSig$();\nconst useInput = checkit => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isFocus, setIsFocus] = useState(false);\n  const isValid = checkit(enteredValue);\n  const isInputValid = !isNameValidNow && isNameFocus;\n  const handlerFunction = event => {\n    setEnteredValue(event.target.value);\n  };\n  const blurHandler = () => {\n    setIsFocus(true);\n  };\n  return {\n    enteredValue,\n    isValid,\n    isInputValid,\n    handlerFunction,\n    blurHandler\n  };\n};\n_s(useInput, \"+KOFgv4HsDsFO7g9nKiHE6XrE9s=\");\nexport default useInput;","map":{"version":3,"names":["useInput","checkit","_s","enteredValue","setEnteredValue","useState","isFocus","setIsFocus","isValid","isInputValid","isNameValidNow","isNameFocus","handlerFunction","event","target","value","blurHandler"],"sources":["C:/Users/Abdul/Masaüstü/advance forms/src/hooks/use-input.js"],"sourcesContent":["const useInput = (checkit) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isFocus, setIsFocus] = useState(false);\r\n\r\n  const isValid = checkit(enteredValue);\r\n  const isInputValid = !isNameValidNow && isNameFocus;\r\n\r\n  const handlerFunction = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n  const blurHandler = () => {\r\n    setIsFocus(true);\r\n  };\r\n\r\n  return { enteredValue, isValid, isInputValid, handlerFunction, blurHandler };\r\n};\r\n\r\nexport default useInput;\r\n"],"mappings":";AAAA,MAAMA,QAAQ,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMG,OAAO,GAAGP,OAAO,CAACE,YAAY,CAAC;EACrC,MAAMM,YAAY,GAAG,CAACC,cAAc,IAAIC,WAAW;EAEnD,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjCT,eAAe,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EACD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBT,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,OAAO;IAAEJ,YAAY;IAAEK,OAAO;IAAEC,YAAY;IAAEG,eAAe;IAAEI;EAAY,CAAC;AAC9E,CAAC;AAACd,EAAA,CAfIF,QAAQ;AAiBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}