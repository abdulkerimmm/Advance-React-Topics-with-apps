{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\http request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(\"ekstra\");\n  const fetchMoviHandler = useCallback(async () => {\n    try {\n      console.log(\"1\");\n      setIsLoading(true);\n      setError(null);\n      console.log(\"wait or not\");\n      const response = await fetch(\"https://http-request-1cf75-default-rtdb.firebaseio.com/myMovies.json\");\n      if (!response.ok) {\n        throw new Error(\"somthing went wrong!\");\n      }\n      console.log(\"2\");\n      const data = await response.json();\n      console.log(\"3\");\n      const movieList = data.map(movieItem => {\n        return {\n          id: movieItem.episode_id,\n          title: movieItem.title,\n          openingText: movieItem.opening_crawl,\n          releaseDate: movieItem.release_date\n        };\n      });\n      setMovies(movieList);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    console.log(\"useefect worked\");\n    fetchMoviHandler();\n  }, [fetchMoviHandler]);\n  console.log(\"4\");\n  console.log(isLoading);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"no found movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this);\n  }\n  const addMovieHandler = async movie => {\n    const response = await fetch(\"https://http-request-1cf75-default-rtdb.firebaseio.com/myMovies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-type\": \"application-json\"\n      }\n    });\n    const data = response.json();\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), console.log(\"5\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"snyon38OxXvgSyZPUTkZl23XAWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","console","log","fetchMoviHandler","response","fetch","ok","Error","data","json","movieList","map","movieItem","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","addMovieHandler","movie","method","body","JSON","stringify","headers","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/http request/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(\"ekstra\");\n\n  const fetchMoviHandler = useCallback(async () => {\n    try {\n      console.log(\"1\");\n      setIsLoading(true);\n      setError(null);\n      console.log(\"wait or not\");\n      const response = await fetch(\n        \"https://http-request-1cf75-default-rtdb.firebaseio.com/myMovies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"somthing went wrong!\");\n      }\n      console.log(\"2\");\n      const data = await response.json();\n      console.log(\"3\");\n      const movieList = data.map((movieItem) => {\n        return {\n          id: movieItem.episode_id,\n          title: movieItem.title,\n          openingText: movieItem.opening_crawl,\n          releaseDate: movieItem.release_date,\n        };\n      });\n      setMovies(movieList);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"useefect worked\");\n    fetchMoviHandler();\n  }, [fetchMoviHandler]);\n\n  console.log(\"4\");\n  console.log(isLoading);\n\n  let content = <p>no found movies</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>loading...</p>;\n  }\n\n  const addMovieHandler = async (movie) => {\n    const response = await fetch(\n      \"https://http-request-1cf75-default-rtdb.firebaseio.com/myMovies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: { \"Content-type\": \"application-json\" },\n      }\n    );\n    const data = response.json();\n    console.log(data);\n  };\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n      {console.log(\"5\")}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}