{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\http request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(\"ekstra\");\n  const fetchMoviHandler = async () => {\n    try {\n      console.log(\"1\");\n      setIsLoading(true);\n      setError(null);\n      console.log(\"wait or not\");\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"somthing went wrong!\");\n      }\n      console.log(\"2\");\n      const data = await response.json();\n      console.log(\"3\");\n      const movieList = data.results.map(movieItem => {\n        return {\n          id: movieItem.episode_id,\n          title: movieItem.title,\n          openingText: movieItem.opening_crawl,\n          releaseDate: movieItem.release_date\n        };\n      });\n      setMovies(movieList);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n  console.log(\"4\");\n  console.log(isLoading);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no found movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 57\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), console.log(\"5\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zuBJAn2dLkBMoQCfa8VUzB2Qvvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","console","log","fetchMoviHandler","response","fetch","ok","Error","data","json","movieList","results","map","movieItem","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/http request/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(\"ekstra\");\n\n  const fetchMoviHandler = async () => {\n    try {\n      console.log(\"1\");\n      setIsLoading(true);\n      setError(null);\n      console.log(\"wait or not\");\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"somthing went wrong!\");\n      }\n      console.log(\"2\");\n      const data = await response.json();\n      console.log(\"3\");\n      const movieList = data.results.map((movieItem) => {\n        return {\n          id: movieItem.episode_id,\n          title: movieItem.title,\n          openingText: movieItem.opening_crawl,\n          releaseDate: movieItem.release_date,\n        };\n      });\n      setMovies(movieList);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n\n  console.log(\"4\");\n  console.log(isLoading);\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>no found movies</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>loading...</p>}\n      </section>\n      {console.log(\"5\")}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxCY,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErB,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChBJ,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MACdC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACAN,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChB,MAAMM,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChB,MAAMQ,SAAS,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QAChD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MACFxB,SAAS,CAACc,SAAS,CAAC;IACtB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACsB,OAAO,CAAC;IACzB;IACAvB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChBD,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EAEtB,oBACEL,OAAA,CAACJ,KAAK,CAACkC,QAAQ;IAAAC,QAAA,gBACb/B,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAQgC,OAAO,EAAErB,gBAAiB;QAAAoB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACVpC,OAAA;MAAA+B,QAAA,GACG,CAAC1B,SAAS,IAAIF,MAAM,CAACkC,MAAM,GAAG,CAAC,iBAAIrC,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE,CAAC/B,SAAS,IAAIF,MAAM,CAACkC,MAAM,KAAK,CAAC,IAAI,CAAC9B,KAAK,iBAAIP,OAAA;QAAA+B,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACrE,CAAC/B,SAAS,IAAIE,KAAK,iBAAIP,OAAA;QAAA+B,QAAA,EAAIxB;MAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrC/B,SAAS,iBAAIL,OAAA;QAAA+B,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACT3B,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAErB;AAAClC,EAAA,CAnDQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}