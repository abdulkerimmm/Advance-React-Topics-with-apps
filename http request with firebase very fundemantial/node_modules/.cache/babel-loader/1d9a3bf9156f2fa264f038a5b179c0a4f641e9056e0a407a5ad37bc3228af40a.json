{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\http request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(\"ekstra\");\n  const fetchMoviHandler = async () => {\n    console.log(\"1\");\n    setIsLoading(true);\n    console.log(\"wait or not\");\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    console.log(\"2\");\n    const data = await response.json();\n    console.log(\"3\");\n    const movieList = data.results.map(movieItem => {\n      return {\n        id: movieItem.episode_id,\n        title: movieItem.title,\n        openingText: movieItem.opening_crawl,\n        releaseDate: movieItem.release_date\n      };\n    });\n    setMovies(movieList);\n    setIsLoading(false);\n  };\n  console.log(\"4\");\n  console.log(isLoading);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), console.log(\"5\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","console","log","fetchMoviHandler","response","fetch","data","json","movieList","results","map","movieItem","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/http request/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(\"ekstra\");\n  const fetchMoviHandler = async () => {\n    console.log(\"1\");\n    setIsLoading(true);\n    console.log(\"wait or not\");\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    console.log(\"2\");\n    const data = await response.json();\n    console.log(\"3\");\n    const movieList = data.results.map((movieItem) => {\n      return {\n        id: movieItem.episode_id,\n        title: movieItem.title,\n        openingText: movieItem.opening_crawl,\n        releaseDate: movieItem.release_date,\n      };\n    });\n    setMovies(movieList);\n    setIsLoading(false);\n  };\n  console.log(\"4\");\n  console.log(isLoading);\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={movies} />}\n        {isLoading && <p>loading...</p>}\n      </section>\n      {console.log(\"5\")}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjDU,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBF,YAAY,CAAC,IAAI,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5DJ,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCN,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,MAAMM,SAAS,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MAChD,OAAO;QACLC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MACzB,CAAC;IACH,CAAC,CAAC;IACFpB,SAAS,CAACU,SAAS,CAAC;IACpBR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChBD,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtB,oBACEL,OAAA,CAACJ,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACb1B,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAQ2B,OAAO,EAAElB,gBAAiB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACV/B,OAAA;MAAA0B,QAAA,GACG,CAACrB,SAAS,iBAAIL,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5C1B,SAAS,iBAAIL,OAAA;QAAA0B,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACTxB,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAErB;AAAC7B,EAAA,CArCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}