{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\React\\\\React files and Courses\\\\COURSES\\\\React - The Complete Guide (incl Hooks, React Router, Redux)\\\\my codes\\\\food-app (http and forms)\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  totalAmount: 0\n};\n//REDUCER FUNCTION\nconst reducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateTotalAmount = state.totalAmount + action.payload.amount * action.payload.price;\n    let updateItems;\n    const existItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n    let existItem = state.items[existItemIndex];\n    if (existItem) {\n      const updateItem = {\n        ...existItem,\n        amount: existItem.amount + action.payload.amount\n      };\n      updateItems = [...state.items];\n      updateItems[existItemIndex] = updateItem;\n    } else {\n      updateItems = state.items.concat(action.payload);\n    }\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n  if (action.type == \"REMOVE\") {\n    let updateItems2;\n    const existItemIndex2 = state.items.findIndex(item => item.id === action.payload);\n    let existItem2 = state.items[existItemIndex2];\n    const updateTotalAmount = state.totalAmount - existItem2.price;\n    if (existItem2.amount === 1) {\n      updateItems2 = state.items.filter(item => item.id !== action.payload);\n    } else {\n      const updateItem2 = {\n        ...existItem2,\n        amount: existItem2.amount - 1\n      };\n      updateItems2 = [...state.items];\n      updateItems2[existItemIndex2] = updateItem2;\n    }\n    return {\n      items: updateItems2,\n      totalAmount: updateTotalAmount\n    };\n  }\n  if (action.type === \"RESET\") {\n    return initialState;\n  }\n  return initialState;\n};\nconst CartProvider = props => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(\"items\", state.items);\n  const addItemToCartHandler = item => {\n    dispatch({\n      type: \"ADD\",\n      payload: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatch({\n      type: \"REMOVE\",\n      payload: id\n    });\n  };\n  const resetItemFromCartHandler = id => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  const cartcontext = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    resetItems: resetItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartcontext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","initialState","items","totalAmount","reducer","state","action","type","updateTotalAmount","payload","amount","price","updateItems","existItemIndex","findIndex","item","id","existItem","updateItem","concat","updateItems2","existItemIndex2","existItem2","filter","updateItem2","CartProvider","props","_s","dispatch","console","log","addItemToCartHandler","removeItemFromCartHandler","resetItemFromCartHandler","cartcontext","addItem","removeItem","resetItems","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/React/React files and Courses/COURSES/React - The Complete Guide (incl Hooks, React Router, Redux)/my codes/food-app (http and forms)/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n//REDUCER FUNCTION\r\nconst reducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updateTotalAmount =\r\n      state.totalAmount + action.payload.amount * action.payload.price;\r\n    let updateItems;\r\n    const existItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.payload.id\r\n    );\r\n    let existItem = state.items[existItemIndex];\r\n    if (existItem) {\r\n      const updateItem = {\r\n        ...existItem,\r\n        amount: existItem.amount + action.payload.amount,\r\n      };\r\n      updateItems = [...state.items];\r\n      updateItems[existItemIndex] = updateItem;\r\n    } else {\r\n      updateItems = state.items.concat(action.payload);\r\n    }\r\n    return { items: updateItems, totalAmount: updateTotalAmount };\r\n  }\r\n\r\n  if (action.type == \"REMOVE\") {\r\n    let updateItems2;\r\n    const existItemIndex2 = state.items.findIndex(\r\n      (item) => item.id === action.payload\r\n    );\r\n    let existItem2 = state.items[existItemIndex2];\r\n    const updateTotalAmount = state.totalAmount - existItem2.price;\r\n    if (existItem2.amount === 1) {\r\n      updateItems2 = state.items.filter((item) => item.id !== action.payload);\r\n    } else {\r\n      const updateItem2 = {\r\n        ...existItem2,\r\n        amount: existItem2.amount - 1,\r\n      };\r\n      updateItems2 = [...state.items];\r\n      updateItems2[existItemIndex2] = updateItem2;\r\n    }\r\n    return { items: updateItems2, totalAmount: updateTotalAmount };\r\n  }\r\n\r\n  if (action.type === \"RESET\") {\r\n    return initialState;\r\n  }\r\n  return initialState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  console.log(\"items\", state.items);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatch({ type: \"ADD\", payload: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatch({ type: \"REMOVE\", payload: id });\r\n  };\r\n\r\n  const resetItemFromCartHandler = (id) => {\r\n    dispatch({ type: \"RESET\" });\r\n  };\r\n\r\n  const cartcontext = {\r\n    items: state.items,\r\n    totalAmount: state.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    resetItems: resetItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartcontext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}